services:
  frontend:
    build:
      context: ./frontend/movie-reservation-system
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend/movie-reservation-system:/app
      - /app/node_modules
    command: npm run dev

  backend:
    build:
      context: ./backend/movie-reservation-system
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/movie-reservation
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=nom

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: movie-reservation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: nom
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
